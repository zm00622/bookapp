{"version":3,"sources":["Progress.js","Question.js","Answer.js","Answers.js","App.js","serviceWorker.js","index.js"],"names":["Progress","props","className","current","total","Question","question","Answer","classes","selected","push","value","number","join","onClick","handleClick","answer","Answers","number_1","currentAnswer","number_2","number_3","number_4","number_5","App","useState","currentQuestion","setCurrentQuestion","setCurrentAnswer","answers","setAnswers","showResults","setShowResults","error","setError","questions","id","incorrect_answer1","incorrect_answer2","incorrect_answer3","suggested_reading","book_link","link_text","href","target","map","find","answerId","key","length","renderError","e","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f93e8e66.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction Progress (props) {\n\n  return (\n    <div>\n      <h2 className=\"Progress\">Question {props.current} of {props.total}</h2>\n    </div>\n  );\n}\n\nexport default Progress;\n","import React from 'react';\nimport './App.css';\n\nfunction Question(props) {\n  return (\n    <h1 className=\"QuestionHeader\">{props.question}</h1>\n  );\n}\n\nexport default Question;\n","import React from 'react';\n\nfunction Answer(props) {\n  let classes = ['answer'];\n\n  if (props.selected){\n    classes.push('selected');\n  }\n\n  return (\n    <button\n      value={props.number}\n      className={classes.join(' ')}\n      onClick={props.handleClick}>\n      <span className=\"letter\">{props.number}.</span> {props.answer}\n    </button>\n  );\n}\n\nexport default Answer;\n","import React from 'react';\nimport Answer from './Answer.js';\n\nfunction Answers(props) {\n  return(\n    <div>\n      <Answer\n        number=\"1\"\n        answer={props.question.number_1}\n        handleClick={props.handleClick}\n        selected={props.currentAnswer === '1'}\n      />\n      <Answer\n        number=\"2\"\n        answer={props.question.number_2}\n        handleClick={props.handleClick}\n        selected={props.currentAnswer === '2'}\n      />\n      <Answer\n        number=\"3\"\n        answer={props.question.number_3}\n        handleClick={props.handleClick}\n        selected={props.currentAnswer === '3'}\n      />\n      <Answer\n        number=\"4\"\n        answer={props.question.number_4}\n        handleClick={props.handleClick}\n        selected={props.currentAnswer === '4'}\n      />\n      <Answer\n        number=\"5\"\n        answer={props.question.number_5}\n        handleClick={props.handleClick}\n        selected={props.currentAnswer === '5'}\n      />\n\n\n\n\n    </div>\n  );\n}\n\nexport default Answers;\n","import React, {useState} from 'react';\nimport Progress from './Progress.js';\nimport Question from './Question.js';\nimport Answers from './Answers.js';\nimport './App.css';\n\nfunction App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [currentAnswer, setCurrentAnswer] = useState('');\n  const [answers, setAnswers] = useState([]);\n  const [showResults, setShowResults] = useState(false);\n  const [error, setError] = useState('');\n\n  const questions = [\n        {\n            id: 1,\n            question: 'I am usually happy',\n\n            number_1: 'I strongly disagree',\n            number_2: 'I somewhat disagree',\n            number_3: 'I neither agree nor disagree',\n            number_4: 'I agree',\n            number_5: 'I strongly agree',\n\n            incorrect_answer1: '1',\n            incorrect_answer2: '2',\n            incorrect_answer3: '3',\n\n            suggested_reading: 'You seem to be unhappy on a frequent basis. Perhaps you should read:',\n            book_link: \"https://www.amazon.com/Happiness-Hypothesis-Finding-Modern-Ancient/dp/0465028020\",\n            // book_link: is passed into the <a href=\"\"></a>\n            link_text: '\"The Happiness Hypothesis by Jonathan Haidt\".'\n        },\n        {\n            id: 2,\n            question: 'I feel as though my life has a sense of purpose',\n\n            number_1: 'I strongly disagree',\n            number_2: 'I somewhat disagree',\n            number_3: 'I neither agree nor disagree',\n            number_4: 'I agree',\n            number_5: 'I strongly agree',\n\n            incorrect_answer1: '1',\n            incorrect_answer2: '2',\n            incorrect_answer3: '3',\n\n            suggested_reading: 'You may be struggling with your sense of purpose. Perhaps you should read:',\n            book_link: \"https://www.amazon.com/Mans-Search-Meaning-Viktor-Frankl/dp/080701429X\",\n            link_text: '\"Mans Search for Meaning by Vicktor Frankl\".'\n        },\n        {\n            id: 3,\n            question: 'I feel as though I have great habits',\n\n            number_1: 'I strongly disagree',\n            number_2: 'I somewhat disagree',\n            number_3: 'I neither agree nor disagree',\n            number_4: 'I agree',\n            number_5: 'I strongly agree',\n\n            incorrect_answer1: '1',\n            incorrect_answer2: '2',\n            incorrect_answer3: '3',\n\n            suggested_reading: 'You may need some better habits. Perhaps you should read:',\n            book_link: \"https://www.amazon.com/Mini-Habits-Smaller-Bigger-Results/dp/1494882272\",\n            link_text: '\"Mini Habits by Stephen Guise\".'\n        },\n        {\n            id: 4,\n            question: 'I am a great leader. I do not need any more teaching.',\n\n            number_1: 'I strongly disagree',\n            number_2: 'I somewhat disagree',\n            number_3: 'I neither agree nor disagree',\n            number_4: 'I agree',\n            number_5: 'I strongly agree',\n\n            incorrect_answer1: '1',\n            incorrect_answer2: '2',\n            incorrect_answer3: '3',\n\n            suggested_reading: 'You realize your leadership skills could always be better, thats great! Consider reading:',\n            book_link: \"https://www.amazon.com/How-Win-Friends-Influence-People/dp/0671027034/ref=asc_df_0671027034/?tag=hyprod-20&linkCode=df0&hvadid=312721175982&hvpos=1o2&hvnetw=g&hvrand=6085091545799626101&hvpone=&hvptwo=&hvqmt=&hvdev=c&hvdvcmdl=&hvlocint=&hvlocphy=9011355&hvtargid=aud-801381245258:pla-432445153110&psc=1\",\n            link_text: '\"How to Win Friends and Influence People by Dale Carnegie\".'\n        },\n        {\n            id: 5,\n            question: 'Money is not an issue for me. I neither need it nor want it',\n\n            number_1: 'I strongly disagree',\n            number_2: 'I somewhat disagree',\n            number_3: 'I neither agree nor disagree',\n            number_4: 'I agree',\n            number_5: 'I strongly agree',\n\n            incorrect_answer1: '1',\n            incorrect_answer2: '2',\n            incorrect_answer3: '3',\n\n            suggested_reading: 'Based on your answer to question 5, we recommend:',\n            book_link: \"https://www.amazon.com/Rich-Dad-Poor-Teach-Middle-dp-B008BUHTLE/dp/B008BUHTLE/ref=mt_audio_download?_encoding=UTF8&me=&qid=\",\n            link_text: '\"Rich Dad Poor Dad by Robert T. Kiyosaki\".'\n        },\n    ];\n\n  let suggested = <a href=\"https://www.meaningfullife.com/50-reasons-why-your-life-matters/\" target=\"_blank\">\"50 Reasons You Matter!\"</a>;\n\n  const question = questions[currentQuestion];\n\n  const handleClick = e => {\n    setCurrentAnswer(e.target.value);\n    setError(''); // Once user clicks on option, set error msg to empty\n  };\n\n  const renderError = () => {\n    if (!error) {\n      return;\n    }\n    return <div className=\"error\">{error}</div>\n  }\n\n//__________________________________________\n\n// Show the questions on the results page, as well as whether or not the user is correct\n// const, arrow functions, map and find are all things you need to understand to understand the below\nconst renderResultsData = () => {\n\n  const resultArray =  answers.map( answer => {\n    const question = questions.find(\n      question => question.id === answer.answerId\n      // question.id is equal to answer\n    );\n\n    if (question.incorrect_answer1 === answer.answer) {\n      const resultElement = <div className=\"ResultElement\" key={question.id} >\n      {question.suggested_reading}\n      <a href={question.book_link} target=\"_blank\">\n        {question.link_text}\n      </a>\n      </div>;\n      return resultElement\n    } else if (question.incorrect_answer2 === answer.answer) {\n      const resultElement =\n        <div className=\"ResultElement\" key={question.id} > {question.suggested_reading}\n          <a href={question.book_link} target=\"_blank\">\n            {question.link_text}\n          </a>\n        </div>;\n      return resultElement\n    } else if (question.incorrect_answer3 === answer.answer) {\n      const resultElement =\n        <div className=\"ResultElement\" key={question.id} > {question.suggested_reading}\n          <a href={question.book_link} target=\"_blank\">\n            {question.link_text}\n          </a>\n        </div>;\n      return resultElement\n    }\n  });\n  return resultArray\n};\n\nconst renderDoingWell = () => {\n    const doingWell = <div className=\"ResultElement\"  > If there are no reading recommendations then you must be doing well. Either way, thanks for using the app. We hope this has been helpful. Click the home icon to return to the home page or click restart to take the quiz again.</div>;\n    return doingWell\n};\n\n  //__________________________________________\n\n  // Reset quiz onClick of restart button\n  const restart = () => {\n    setAnswers([]);\n    setCurrentAnswer('');\n    setCurrentQuestion(0);\n    setShowResults(false);\n  };\n\n  const next = () => {\n    const answer = {answerId: question.id, answer: currentAnswer};\n    // currentAnswer\n\n    if (!currentAnswer){\n      setError('Please select an answer');\n      return;\n    }\n\n    answers.push(answer);\n    setAnswers(answers);\n    setCurrentAnswer('');\n\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n      return;\n    }\n\n    setShowResults(true); // Because after this next function, you'll be at the results page\n  };\n\n  if (showResults) { // If finished quiz, display results & restart button\n    return (\n      <div className=\"container\">\n        <a className=\"IconLink\" href=\"\"><i className=\"home icon\"></i></a>\n        <h2>Our Book Recommendations</h2>\n          <p>{renderResultsData()}</p>\n          <p>{renderDoingWell()}</p>\n        <button className=\"btn btn-primary\" onClick={restart}>\n          Restart\n        </button>\n      </div>\n    );\n  } else { // If quiz not finished, display current question and answers\n    return (\n      <div className=\"container\">\n      <a className=\"IconLink\" href=\"http://www.riseoverlimits.com\"><i className=\"home icon\"></i></a>\n        <h1>Book Recommendation App</h1>\n        <Progress total={questions.length} current={currentQuestion + 1} />\n        <Question question={question.question} />\n        {renderError()}\n        <Answers\n          question={question}\n          currentAnswer={currentAnswer}\n          handleClick={handleClick}\n        />\n        <button className=\"btn btn-primary\" onClick={next}>\n          Confirm and Continue\n        </button>\n      </div>\n    );\n  }\n} // End bracket for App\n\nexport default App;\n\n\n\n\n// function Answer(props) {\n//\n//   return (\n//     <button value={props.letter} >\n//       <span className=\"letter\">{props.letter}</span> {props.answer}\n//     </button>\n//   );\n// }\n//\n// export default Answer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}